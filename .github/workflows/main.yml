name: LineageOS Builder

on:
  workflow_dispatch:
jobs:
  test:
    name: Build LineageOS 21 using foss.crave.io

    runs-on: self-hosted

    steps:
    - name: Telegram Notification
      continue-on-error: true
      uses: xinthink/action-telegram@v1.1
      with:
        chatId: ${{ secrets.TELEGRAM_TO }}
        botToken: ${{ secrets.TELEGRAM_TOKEN }}
        jobStatus: "Build Started"
        skipSuccess: false
    - name: Cleanup
      run: rm -rf * /crave-devspaces/Lineage21
    - name: Create workspace
      run: mkdir -p /crave-devspaces/Lineage21
      continue-on-error: true
    - name: Enter Workspace
      run: cd /crave-devspaces/Lineage21
      continue-on-error: true
      # Check-out in order to access the repository's files.
    - name: Check-out to repository
      uses: actions/checkout@v4 
    - name: Test Local Manifests
      run: |
        cd /crave-devspaces/Lineage21
        rm -rf tester || true
        mkdir tester
        cd tester
        repo init -u https://github.com/LineageOS/android.git -b lineage-21.0 --git-lfs
        git clone https://github.com/sir-solderet/android_device_samsung_gta9.git --depth 1 -b lineage-21 .repo/manifests && \
        timeout 1m repo sync --force-sync || { exit_code=$?; [ $exit_code -eq 124 ] || (echo "Error: Process failed with exit code $exit_code"; exit $exit_code); }
        rm -rf .repo
      timeout-minutes: 10    
    - name: Exports
      run: |
        export BUILD_HOSTNAME=crave
        export BUILD_USERNAME=gta9-dev
    - name: Run Script
      run: mkdir -p /crave-devspaces/Lineage21/.repo/manifests; cp crave.yaml /crave-devspaces/Lineage21/.repo/manifests; cp {build.sh,crave.conf.sample} /crave-devspaces/Lineage21; cd /crave-devspaces/Lineage21; bash build.sh
      # Only reach this when the user killed the workflow.
    - name: Execute if the job is cancelled
      if: ${{ cancelled() }}
      run: cd /crave-devspaces/Lineage21; crave stop --all
    - name: Telegram Notification
      if: ${{ success() || cancelled() || failure() }}
      continue-on-error: true
      uses: xinthink/action-telegram@v1.1
      with:
        chatId: ${{ secrets.TELEGRAM_TO }}
        botToken: ${{ secrets.TELEGRAM_TOKEN }}
        jobStatus: ${{ job.status }}
        skipSuccess: false
      # Upload '.zip's and '.img's directly from 'crave' ssh.
    - name: Upload build artifact(s)
      continue-on-error: true
      run: |
        cd $PROJECTFOLDER
        echo "${{ secrets.GITHUB_TOKEN }}" > token.txt
        crave push token.txt -d $(crave ssh -- pwd | grep -v Select | sed -s 's/\r//g')/
        crave ssh -- "bash /opt/crave/github-actions/upload.sh '${{ github.run_id }}' 'a5y17lte'  '${{ github.repository }}' 'lineage-${{ github.run_id }}' '${{ secrets.EXTRA_FILES }}'"

      # Pull Errors and Display them
    - name: Display error.log
      if: ${{ failure() }}
      id: errorlog
      run: |
        cd $PROJECTFOLDER
        crave ssh -- sleep 1
        crave pull out/error.log
        echo "Displaying out/error.log"
        cat out/error.log
